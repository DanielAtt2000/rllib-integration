# To see the complete list of configurable parameters see:
# https://github.com/ray-project/ray/blob/master/rllib/agents/trainer.py


use_critic: True

gamma: 0.99
lr: 0.0001
train_batch_size: 128

clip_rewards: False

framework: "torch"
horizon: 6500


#num_rollout_workers: 5
#num_envs_per_worker: 5
#rollout_fragment_length: auto

num_gpus: 1
num_gpus_per_worker: 1
num_cpus_per_worker: 11

#num_workers: 1
#num_gpus: 1
##num_gpus_per_worker: 1
#num_cpus_per_worker: 11
##timesteps_per_iteration: 20000
#
#num_steps_sampled_before_learning_starts: 2500
#recreate_failed_workers: True
#replay_buffer_config: {
#  capacity: 100000
#}
#
#
## "batch_mode": "complete_episodes"
#
#"exploration_config": {
#   "type": "EpsilonGreedy",
#   "initial_epsilon": 1.0,
#   "final_epsilon": 0.02,
#   "epsilon_timesteps": 1000000
#}
#target_network_update_freq: 8000
#exploration_config: {
#  type: "SoftQ",
#  temperature: 1.0,
#}

#hiddens: [256, 512]
#model: {
#  dim: 300,
#  conv_filters: [
#    [16, [5, 5], 4],
#    [32, [5, 5], 2],
#    [32, [5, 5], 2],
#    [64, [5, 5], 1],
#    [64, [5, 5], 2],
#    [128, [5, 5], 2],
#    [512, [5, 5], 1],
#  ]
#}

env_config:
  carla:
    host: "192.168.1.113"
#    host: "172.17.0.1"
#   host: "127.0.0.1"
    timeout: 30.0
    # IF YOU ARE GOING TO CHANGE THE TIMESTEP CHANGE rotation_frequency of LIDAR
    timestep: 0.07 # IMP IMP
    # IMP
    retries_on_error: 25
    resolution_x: 300
    resolution_y: 300
    quality_level: "Low"
    enable_map_assets: True
    enable_rendering: True
    show_display: True
    map_buffer : 1.2
    truckTrailerCombo: False


  experiment:
    hero:
      truckTrailerCombo: False
#      blueprintTruck: "DAFxf"
      blueprintTruck: "vehicle.audi.a2"
      blueprintTrailer: "trailer"
      lidar_max_points : 3000
      sensors:
#        obstacle:
#          type: "sensor.other.obstacle"
        collision:
          type: "sensor.other.collision"
        depth_camera:
          type: "sensor.camera.depth"
          transform: '0.0,0.0,1.7,0.0,0.0,0.0' # x,y,z,pitch, yaw, roll
#       lidar:
#          type: "sensor.lidar.ray_cast_semantic"
#          channels : "32"
#          range : "30.0"
#          points_per_second : "45000"
#          rotation_frequency : "14.3" #  IMP THIS IS 1 / delta (timestep)
#          upper_fov : '5.0'
#          lower_fov : '-15.0'
#          horizontal_fov : '360.0'
#          sensor_tick : '0'
#          transform : '0.0,0.0,1.6,0.0,0.0,0.0' # x,y,z,pitch, yaw, roll
#        semantic_camera:
#          type: "sensor.camera.semantic_segmentation"
#          transform: '0.0,0.0,1.7,0.0,0.0,0.0' # x,y,z,pitch, yaw, roll
      #        laneInvasion:
#          type: "sensor.other.lane_invasion"
      spawn_points: [
         "5.1,54.2,1",  # x,y,z[,roll,pitch,yaw]
        "5.7,117.7,1",
        "2.0,97.2,1",
        "1.8,87.6,1",
        "4.5,47.0,1",
        "8.3,25.0,1",
         "20.0,11.5,1",
         "36.9,7.1,1",
        ]
      final_location_x: 56.4
      final_location_y: 7.5
    background_activity:
      n_vehicles: 0
      n_walkers: 0

      tm_hybrid_mode: True
#    town: "Town03_Opt"
    town: '4round'
    others:
      framestack: 1
      max_time_idle: 600
      max_time_episode: 6400
